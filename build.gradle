plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.11'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'hpbao'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//JPA, 스프링 데이터 JPA 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//H2 데이터베이스 추가
	runtimeOnly 'com.h2database:h2'


	implementation 'org.springframework.boot:spring-boot-starter-validation'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	developmentOnly ('org.springframework.boot:spring-boot-devtools')
	//테스트에서 lombok 사용
//	testCompileOnly 'org.projectlombok:lombok'
//	testAnnotationProcessor 'org.projectlombok:lombok'
}
// node_modules 디렉토리 설치
//tasks.register('npmInstall', Exec) {
//	workingDir = file('react-app')
//	commandLine 'npm', 'install'
//}
//
//// React 애플리케이션 빌드
//tasks.register('npmBuild', Exec) {
//	dependsOn 'npmInstall'
//	workingDir = file('react-app')
//	commandLine 'npm', 'run', 'build'
//}
//
////React 빌드 결과물을 spring Boot 프로젝트의 정적 리소스 디렉토리로 복사
//tasks.register('copyReactBuild', Copy) {
//	dependsOn 'npmBuild'
//	from file('react-app/build')
//	into file('src/main/resources/static')
//}
//
//// jar 파일 생성 시 copyReactBuild 작업 완료 확인
bootJar {
	dependsOn 'copyReactBuild'
}



tasks.named('test') {
	useJUnitPlatform()
}